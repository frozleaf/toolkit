<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <DropShadowEffect
        x:Key="Shadow"
        BlurRadius="6"
        ShadowDepth="0"
        Color="#FF4B4B4B" />
    <Style x:Key="WindowBlur" TargetType="{x:Type Window}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.UseLayoutRounding" Value="True" />
        <Setter Property="Window.ShowInTaskbar" Value="False" />
        <Setter Property="Window.WindowStyle" Value="None" />
        <Setter Property="Window.AllowsTransparency" Value="True" />
        <Setter Property="Control.FontSize" Value="13" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{DynamicResource Theme.MainBack1}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Window" TargetType="{x:Type Window}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.UseLayoutRounding" Value="True" />
        <Setter Property="Window.ShowInTaskbar" Value="False" />
        <Setter Property="Window.WindowStyle" Value="None" />
        <Setter Property="Window.Topmost" Value="True" />
        <Setter Property="Window.ResizeMode" Value="NoResize" />
        <Setter Property="Window.AllowsTransparency" Value="True" />
        <Setter Property="Control.FontSize" Value="13" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForeOnWhite}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border>
                        <Grid Margin="6">
                            <Border Background="{DynamicResource Theme.MainBack1}" Effect="{StaticResource Shadow}" />
                            <ContentPresenter />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ControlButton" TargetType="{x:Type Button}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
        <Setter Property="FrameworkElement.Width" Value="36" />
        <Setter Property="FrameworkElement.Height" Value="30" />
        <Setter Property="Control.FontFamily" Value="/Rolan;component/Resources/#iconfont" />
        <Setter Property="Control.FontWeight" Value="Normal" />
        <Setter Property="Control.Foreground" Value="{DynamicResource Theme.MainFore}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="bg1" />
                        <Border
                            Name="bg2"
                            Background="{DynamicResource Theme.MainBack2}"
                            Opacity="0" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <TriggerBase.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="bg2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.EnterActions>
                            <TriggerBase.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            FillBehavior="Stop"
                                            Storyboard.TargetName="bg2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.ExitActions>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="bg2" Property="Border.Background" Value="{DynamicResource Theme.MainBack3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ControlButton2" TargetType="{x:Type ToggleButton}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Top" />
        <Setter Property="FrameworkElement.Width" Value="36" />
        <Setter Property="FrameworkElement.Height" Value="30" />
        <Setter Property="Control.FontFamily" Value="/Rolan;component/Resources/#iconfont" />
        <Setter Property="Control.FontWeight" Value="Normal" />
        <Setter Property="Control.Foreground" Value="{DynamicResource Theme.MainFore}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border Name="bg1" />
                        <Border
                            Name="bg2"
                            Background="{DynamicResource Theme.MainBack2}"
                            Opacity="0" />
                        <Border
                            Name="bg3"
                            Background="{DynamicResource Theme.MainBack3}"
                            Opacity="0" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <TriggerBase.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="bg2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.EnterActions>
                            <TriggerBase.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            FillBehavior="Stop"
                                            Storyboard.TargetName="bg2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.ExitActions>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="bg3" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="bg3" Property="UIElement.Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="FrameworkElement.Margin" Value="0,3" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Height="1" Background="{StaticResource ClickOnWhite}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="SubmenuItem" TargetType="{x:Type MenuItem}">
        <Border
            Name="Border"
            Padding="0,7"
            Background="#00FFFFFF">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="13" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <Border
                    Name="Check"
                    Width="13"
                    Height="13"
                    Margin="6,0,6,0"
                    Visibility="Collapsed">
                    <Path
                        Name="CheckMark"
                        Width="7"
                        Height="7"
                        Data="M0,0 L7,7 M0,7 L7,0"
                        Stroke="{StaticResource ForeOnWhite}"
                        StrokeThickness="2"
                        Visibility="Hidden" />
                </Border>
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    Name="InputGestureText"
                    Grid.Column="2"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="True">
                <Setter TargetName="CheckMark" Property="UIElement.Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="MenuItem.IsCheckable" Value="True">
                <Setter TargetName="Check" Property="UIElement.Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Hidden" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource HoverOnWhite}" />
            </Trigger>
            <Trigger Property="MenuItem.IsPressed" Value="True">
                <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource ClickOnWhite}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="#FF808080" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SubmenuHeader" TargetType="{x:Type MenuItem}">
        <Border
            Name="Border"
            Padding="0,7"
            Background="#00FFFFFF">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon" />
                <ContentPresenter
                    Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock
                    Name="InputGestureText"
                    Grid.Column="2"
                    DockPanel.Dock="Right"
                    Text="{TemplateBinding InputGestureText}" />
                <Path
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L0,7 L4,3.5"
                    Fill="{StaticResource ForeOnWhite}" />
                <Popup
                    Name="Popup"
                    MinWidth="170"
                    AllowsTransparency="True"
                    Focusable="False"
                    HorizontalOffset="0"
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    Placement="Right"
                    PopupAnimation="Fade"
                    VerticalOffset="-10">
                    <Border
                        Name="SubmenuBorder"
                        Margin="6"
                        Padding="0,3"
                        Background="{StaticResource BackOnWhite}"
                        Effect="{StaticResource Shadow}">
                        <StackPanel IsItemsHost="True" />
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource HoverOnWhite}" />
            </Trigger>
            <Trigger Property="MenuItem.IsPressed" Value="True">
                <Setter TargetName="Border" Property="Border.Background" Value="{StaticResource ClickOnWhite}" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Control.Foreground" Value="#FF808080" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="{x:Type ContextMenu}" TargetType="{x:Type ContextMenu}">
        <Setter Property="ContextMenu.HorizontalOffset" Value="-6" />
        <Setter Property="ContextMenu.VerticalOffset" Value="-6" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        Name="Border"
                        MinWidth="160"
                        Margin="6"
                        Padding="0,3"
                        Background="{StaticResource BackOnWhite}"
                        Effect="{StaticResource Shadow}">
                        <StackPanel IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="Control.FontSize" Value="12" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForeOnWhite}" />
        <Style.Triggers>
            <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                <Setter Property="Control.Template" Value="{StaticResource SubmenuHeader}" />
            </Trigger>
            <Trigger Property="MenuItem.Role" Value="SubmenuItem">
                <Setter Property="Control.Template" Value="{StaticResource SubmenuItem}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Setter Property="ToolTipService.Placement" Value="Bottom" />
        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="0" />
        <Setter Property="ToolTipService.VerticalOffset" Value="-2" />
        <Setter Property="Control.Foreground" Value="{DynamicResource Theme.ToolTipFore}" />
        <Setter Property="Control.FontSize" Value="12" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border
                        Padding="6"
                        Background="{DynamicResource Theme.ToolTipBack}"
                        BorderBrush="{DynamicResource Theme.ToolTipBorder}"
                        BorderThickness="2">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" />
                        <ScrollBar
                            Name="PART_VerticalScrollBar"
                            Width="10"
                            MinWidth="10"
                            HorizontalAlignment="Right"
                            Maximum="{TemplateBinding ScrollableHeight}"
                            Opacity="0"
                            ViewportSize="{TemplateBinding ViewportHeight}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                            Value="{TemplateBinding VerticalOffset}">
                            <Control.Template>
                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                    <Track Name="PART_Track" IsDirectionReversed="True">
                                        <Track.Thumb>
                                            <Thumb>
                                                <Control.Template>
                                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                                        <Border Background="{DynamicResource Theme.MainBack2}" Opacity="0.75" />
                                                    </ControlTemplate>
                                                </Control.Template>
                                            </Thumb>
                                        </Track.Thumb>
                                    </Track>
                                </ControlTemplate>
                            </Control.Template>
                        </ScrollBar>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="1"
                                        Duration="0:0:0.125" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation
                                        Storyboard.TargetName="PART_VerticalScrollBar"
                                        Storyboard.TargetProperty="Opacity"
                                        To="0"
                                        Duration="0:0:0.125" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Item" TargetType="{x:Type Button}">
        <Setter Property="ToolTipService.InitialShowDelay" Value="0" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        Name="bg"
                        Background="#00FFFFFF"
                        BorderThickness="2">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Border.Background" Value="{DynamicResource Theme.ItemBack2}" />
                            <Setter TargetName="bg" Property="Border.BorderBrush" Value="{DynamicResource Theme.ItemBorder2}" />
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="bg" Property="Border.Background" Value="{DynamicResource Theme.ItemBack3}" />
                            <Setter TargetName="bg" Property="Border.BorderBrush" Value="{DynamicResource Theme.ItemBorder3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button" TargetType="{x:Type Button}">
        <Setter Property="Control.Foreground" Value="{DynamicResource Theme.MainFore}" />
        <Setter Property="FrameworkElement.Height" Value="27" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            Name="bg1"
                            Background="{DynamicResource Theme.MainBack1}"
                            CornerRadius="3" />
                        <Border
                            Name="bg2"
                            Background="{DynamicResource Theme.MainBack2}"
                            CornerRadius="3"
                            Opacity="0" />
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="bg2" Property="Border.Background" Value="{DynamicResource Theme.MainBack3}" />
                        </Trigger>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <TriggerBase.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="bg2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="1"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.EnterActions>
                            <TriggerBase.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            FillBehavior="Stop"
                                            Storyboard.TargetName="bg2"
                                            Storyboard.TargetProperty="Opacity"
                                            To="0"
                                            Duration="0:0:0.125" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="TextBoxBase.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForeOnWhite}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Padding="0,0,0,3"
                        BorderBrush="{DynamicResource Theme.ItemBorder3}"
                        BorderThickness="0,0,0,2">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Setter Property="Control.Foreground" Value="{DynamicResource Theme.ItemFore}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border
                        Padding="0,0,0,3"
                        BorderBrush="{DynamicResource Theme.ItemFore}"
                        BorderThickness="0,0,0,2">
                        <ScrollViewer Name="PART_ContentHost" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TabControl2" TargetType="{x:Type TabControl}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <DockPanel>
                        <Border
                            Width="150"
                            BorderBrush="{DynamicResource Theme.MainBack3}"
                            BorderThickness="0,0,2,0"
                            DockPanel.Dock="Left">
                            <ScrollViewer>
                                <VirtualizingStackPanel IsItemsHost="True" />
                            </ScrollViewer>
                        </Border>
                        <Border Background="{DynamicResource Theme.ListBack}">
                            <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type TabItem}" TargetType="{x:Type TabItem}">
        <Setter Property="FrameworkElement.Height" Value="34" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForeOnWhite}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border Name="bg" Background="#00FFFFFF">
                        <ContentPresenter
                            Margin="15,0"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            ContentSource="Header"
                            TextBlock.Foreground="{DynamicResource Theme.MainFore}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Border.Background" Value="{DynamicResource Theme.MainBack2}" />
                        </Trigger>
                        <Trigger Property="TabItem.IsSelected" Value="True">
                            <Setter TargetName="bg" Property="Border.Background" Value="{DynamicResource Theme.MainBack3}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForeOnWhite}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <DockPanel Background="#00FFFFFF">
                        <Border
                            Name="CheckBorder"
                            Width="18"
                            Height="18"
                            Padding="2"
                            BorderBrush="{StaticResource BorderOnWhite1}"
                            BorderThickness="1">
                            <Border Name="CheckFlag" />
                        </Border>
                        <ContentPresenter Margin="10,0,0,0" VerticalAlignment="Center" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="CheckBorder" Property="Border.BorderBrush" Value="{StaticResource BorderOnWhite2}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="CheckFlag" Property="Border.Background" Value="{StaticResource BorderOnWhite}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.Focusable" Value="False" />
        <Setter Property="Control.Foreground" Value="{StaticResource ForeOnWhite}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            IsHitTestVisible="False" />
                        <Popup
                            MinWidth="{TemplateBinding ActualWidth}"
                            AllowsTransparency="True"
                            Focusable="False"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            Placement="Bottom"
                            PopupAnimation="Slide">
                            <Border
                                Background="#FFFFFFFF"
                                BorderBrush="#FF808080"
                                BorderThickness="1">
                                <ScrollViewer MaxHeight="200">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="Control.Padding" Value="3" />
    </Style>
    <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.Height" Value="27" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border
                        Name="bg"
                        Background="{StaticResource BackOnWhite}"
                        BorderBrush="{StaticResource BorderOnWhite}"
                        BorderThickness="1">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <Setter TargetName="bg" Property="Border.Background" Value="{StaticResource HoverOnWhite}" />
                        </Trigger>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="bg" Property="Border.Background" Value="{StaticResource ClickOnWhite}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Notify" TargetType="{x:Type Button}">
        <Setter Property="Control.Foreground" Value="#0055AA" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border Name="bg" Background="#FFFAE6B4" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="True">
                            <TriggerBase.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="bg"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#FFEBD7A5"
                                            Duration="0:0:0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.EnterActions>
                            <TriggerBase.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            FillBehavior="Stop"
                                            Storyboard.TargetName="bg"
                                            Storyboard.TargetProperty="Background.Color"
                                            To="#FFFAE6B4"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </TriggerBase.ExitActions>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="True">
                            <Setter TargetName="bg" Property="Border.Background" Value="#FFDCC896" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ProImage" TargetType="{x:Type Image}">
        <Setter Property="FrameworkElement.Margin" Value="10,0,0,0" />
        <Setter Property="Image.Stretch" Value="None" />
        <Setter Property="Image.Source" Value="/Rolan;component/Resources/Pro.png" />
    </Style>
</ResourceDictionary>